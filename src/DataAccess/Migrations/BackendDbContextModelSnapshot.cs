// <auto-generated />
using System;
using DataAccess.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(BackendDbContext))]
    partial class BackendDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.Management.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("ActionName")
                        .HasColumnType("text");

                    b.Property<string>("ControllerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Menu", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.MenuRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Notification", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Role", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.SystemParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SystemParameter", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MailAddress")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.MenuRole", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Management.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Core.Entities.Concrete.Management.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.UserRole", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Management.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Concrete.Management.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}

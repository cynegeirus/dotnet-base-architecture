// <auto-generated />
using System;
using DataAccess.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ExpeditionManagementContext))]
    [Migration("20240806123231_ChangeExpeditionTable")]
    partial class ChangeExpeditionTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExpeditionExpeditionStation", b =>
                {
                    b.Property<Guid>("ExpeditionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExpeditionStationsId")
                        .HasColumnType("uuid");

                    b.HasKey("ExpeditionId", "ExpeditionStationsId");

                    b.HasIndex("ExpeditionStationsId");

                    b.ToTable("ExpeditionExpeditionStation", "expedition");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("ActionName")
                        .HasColumnType("text");

                    b.Property<string>("ControllerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 619, DateTimeKind.Local).AddTicks(9695))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(285))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 619, DateTimeKind.Local).AddTicks(9904))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Menu", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.MenuRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(504))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(855))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(680))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(980))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1240))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1113))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Notification", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1347))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1595))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1468))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Role", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.SystemParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1711))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1974))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(1841))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SystemParameter", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2079))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2335))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MailAddress")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2203))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", "management");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2439))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2756))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2597))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "management");
                });

            modelBuilder.Entity("Entities.Concrete.Expedition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2876))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3123))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("TotalDuration")
                        .HasColumnType("interval");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(2997))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Expedition", "expedition");
                });

            modelBuilder.Entity("Entities.Concrete.ExpeditionStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3228))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3486))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<Guid>("ExpeditionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<Guid>("StationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3364))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("ExpeditionStation", "expedition");
                });

            modelBuilder.Entity("Entities.Concrete.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3592))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3879))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("ExpeditionStationId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3735))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("ExpeditionStationId");

                    b.ToTable("Station", "expedition");
                });

            modelBuilder.Entity("Entities.Concrete.Train", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(3989))
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedUserId")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(4239))
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeletedUserId")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsReady")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsUpdated")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 8, 6, 15, 32, 31, 620, DateTimeKind.Local).AddTicks(4112))
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UpdatedUserId")
                        .HasColumnOrder(5);

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Train", "expedition");
                });

            modelBuilder.Entity("ExpeditionExpeditionStation", b =>
                {
                    b.HasOne("Entities.Concrete.Expedition", null)
                        .WithMany()
                        .HasForeignKey("ExpeditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ExpeditionStation", null)
                        .WithMany()
                        .HasForeignKey("ExpeditionStationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.MenuRole", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Management.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Core.Entities.Concrete.Management.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Management.UserRole", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Management.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Concrete.Management.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.Station", b =>
                {
                    b.HasOne("Entities.Concrete.ExpeditionStation", null)
                        .WithMany("Station")
                        .HasForeignKey("ExpeditionStationId");
                });

            modelBuilder.Entity("Entities.Concrete.ExpeditionStation", b =>
                {
                    b.Navigation("Station");
                });
#pragma warning restore 612, 618
        }
    }
}
